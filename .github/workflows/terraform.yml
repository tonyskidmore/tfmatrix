---

name: 'Terraform'

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:

  changed_files:
    name: Changed
    # if: needs.load_config.outputs.changed_only == 'true'
    runs-on: ubuntu-latest
    outputs:
      changed_files: ${{ steps.changed.outputs.changed_files }}
    defaults:
      run:
        shell: bash

    steps:

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Change files script
      id: changed_files
      run: scripts/commit_files_changed.sh

    # - name: Get changed files
    #   id: changed-files
    #   uses: tj-actions/changed-files@v35

    # - name: List all changed files
    #   id: changed
    #   run: |
    #     declare -a dirs
    #     for file in ${{ steps.changed-files.outputs.all_changed_files }}
    #     do
    #       echo "$file was changed"
    #       dir=$(dirname $file)
    #       dir_name="${dir#terraform/environments/}"
    #       echo "directory name: $dir_name"
    #       if [[ "${dir_name,,}" =~ (^dev$)|(^tst$)|(^prd$) ]]
    #       then
    #         printf "adding %s to matrix array\n" "$dir_name"
    #         dirs+=("$dir_name")
    #       else
    #         printf "not adding %s to matrix array\n" "$dir_name"
    #       fi
    #     done
    #     declare -p dirs
    #     json=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${dirs[@]}")
    #     echo "environ=$json" >> "$GITHUB_OUTPUT"

  load_config:
    name: Config
    runs-on: ubuntu-latest
    needs:
      - changed_files
    outputs:
      config: ${{ steps.load_config.outputs.config}}
      # changed_only: ${{ steps.load_config.outputs.changed_only }}
    defaults:
      run:
        shell: bash

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Load config
      id: load_config
      run: scripts/get_config.sh
      env:
        CHANGED_FILES: ${{ needs.changed_files.outputs.changed_files }}


  terraform:
    name: 'Terraform'
    # if: needs.changed_files.outputs.output1 != '[]'
    runs-on: ubuntu-latest
    environment: ${{ matrix.environ }}
    needs:
      - load_config
      - changed_files
    strategy:
      matrix: ${{fromJson(needs.load_config.outputs.config)}}
        # environ: ${{fromJson(needs.changed_files.outputs.output1)}}

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Environment
      run: |
        env
        ls -alt "$GITHUB_WORKSPACE"

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Version
      run: terraform --version

    - name: Terraform Init
      run: |
           terraform \
           -chdir="$GITHUB_WORKSPACE/terraform/${{ matrix.target }}" \
           init \
           -backend-config="$GITHUB_WORKSPACE/environments/${{ matrix.environment }}/${{ matrix.target }}/config.${{ matrix.target }}.tfbackend"

    - name: Terraform Format
      run: |
           terraform \
             -chdir="$GITHUB_WORKSPACE/terraform/${{ matrix.target }}" \
             fmt \
             -check \
             -recursive

    - name: Login to Azure
      if: matrix.target == 'azure'
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}

    - name: Terraform Plan
      run: |
        terraform \
          -chdir="$GITHUB_WORKSPACE/terraform/${{ matrix.target }}" \
          plan \
          -out "tfplan.${{ matrix.environment }}.${{ matrix.target }}" \
          -var-file="$GITHUB_WORKSPACE/environments/${{ matrix.environment }}/terraform.tfvars"

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      # if: github.ref == 'refs/heads/main'
      run: |
        terraform \
          -chdir="$GITHUB_WORKSPACE/terraform/${{ matrix.target }}" \
          apply \
          "tfplan.${{ matrix.environment }}.${{ matrix.target }}"

    - name: Review
      if: always()
      run: |
        env
        printf "PWD: %s\n" "$PWD"
        ls -alt
        tree "$GITHUB_WORKSPACE"
      working-directory: terraform
